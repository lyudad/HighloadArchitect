[{"/Users/macmini/Documents/Cources/Social_network/client/src/App.tsx":"1","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Registration.tsx":"2","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Login.tsx":"3","/Users/macmini/Documents/Cources/Social_network/client/src/reportWebVitals.ts":"4","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Home.tsx":"5","/Users/macmini/Documents/Cources/Social_network/client/src/Consts/api.ts":"6","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Profile.tsx":"7","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Profiles.tsx":"8"},{"size":2264,"mtime":1611480220570,"results":"9","hashOfConfig":"10"},{"size":3864,"mtime":1611430872904,"results":"11","hashOfConfig":"10"},{"size":2329,"mtime":1611430852072,"results":"12","hashOfConfig":"10"},{"size":425,"mtime":1609710760177,"results":"13","hashOfConfig":"10"},{"size":796,"mtime":1611479329677,"results":"14","hashOfConfig":"10"},{"size":139,"mtime":1611430068792,"results":"15","hashOfConfig":"10"},{"size":2329,"mtime":1611478713095,"results":"16","hashOfConfig":"10"},{"size":2329,"mtime":1611478715316,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j9795w",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/macmini/Documents/Cources/Social_network/client/src/App.tsx",[],"/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Registration.tsx",["37","38"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    useMutation\n} from \"react-query\";\n\nimport { apiPath } from '../Consts/api';\n\ntype Inputs = {\n    firstName: string,\n    lastName: string,\n    age: number,\n    gender: string,\n    interests: string,\n    city: string,\n    email: string,\n    password: string\n};\n\nexport default function Registration() {\n    let history = useHistory();\n\n    const registerUserMutation = useMutation(\n        (registrationData: Inputs) => axios.post(`${apiPath}/auth/signup`, registrationData),\n    )\n\n    useEffect(() => {\n        console.log(\"registerUserMutation.data\", registerUserMutation.data)\n        if (registerUserMutation.data?.data.token) {\n            localStorage.setItem('token', registerUserMutation.data?.data.token);\n            notify();\n            setTimeout(() => history.push(\"/\"), 3000);\n        }\n    }, [registerUserMutation.data?.data?.token])\n\n    const { register, handleSubmit, watch, errors } = useForm<Inputs>();\n\n\n    const onSubmit = (data: Inputs) => {\n        console.log('data,', data)\n        registerUserMutation.mutate(data)\n    }\n\n    const notify = () => toast(\"you register success!\");\n\n    return (\n        <>\n            <ToastContainer />\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"firstName\">First name</label>\n                    <input id=\"firstName\" name=\"firstName\" ref={register({ required: true })} />\n                    {errors.firstName && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"firstName\">Last name</label>\n                    <input id=\"lastName\" name=\"lastName\" ref={register({ required: true })} />\n                    {errors.lastName && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"age\">Age</label>\n                    <input id=\"age\" name=\"age\" type=\"number\" ref={register({ required: true })} />\n                    {errors.age && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"gender\">Gender</label>\n                    <select id=\"gender\" name=\"gender\" ref={register}>\n                        <option value=\"female\">female</option>\n                        <option value=\"male\">male</option>\n                    </select>\n                </div>\n\n                <div>\n                    <label htmlFor=\"interests\">Interests</label>\n                    <input id=\"interests\" name=\"interests\" ref={register({ required: true })} />\n                    {errors.interests && <span>This field is required</span>}\n\n                </div>\n                <div>\n                    <label htmlFor=\"city\">City</label>\n                    <input id=\"City\" name=\"city\" ref={register({ required: true })} />\n                    {errors.city && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" name=\"email\" type=\"email\"  ref={register({ required: true })} />\n                    {errors.email && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" name=\"password\" type=\"password\" ref={register({ required: true })} />\n                    {errors.password && <span>This field is required</span>}\n                </div>\n                <input type=\"submit\" />\n            </form>\n        </>\n    );\n}","/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Login.tsx",["39","40"],"import React, {useEffect} from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    useMutation\n  } from \"react-query\";\n\nimport { apiPath } from '../Consts/api';\n\ntype Inputs = {\n    email: string,\n    password: string,\n};\n\nexport default function Login() {\n    let history = useHistory();\n    const loginUserMutation = useMutation((registrationData: Inputs) => axios.post(`${apiPath}/auth/login`, registrationData))\n\n    useEffect(() => {\n        if(loginUserMutation.data?.data.token){\n            console.log(\"loginUserMutation.data?.data.token\", loginUserMutation.data?.data.token)\n            localStorage.setItem('token', loginUserMutation.data?.data.token);\n            notify();\n            setTimeout(() => history.push(\"/\"), 3000);\n        }\n    }, [loginUserMutation.data?.data?.token])\n\n    useEffect(() => {\n        if(loginUserMutation.data?.data.error){\n            console.log(\"loginUserMutation.data?.data.token\", loginUserMutation.data?.data.error)\n            notifyError();\n        }\n    }, [loginUserMutation.data?.data?.error])\n\n    const { register, handleSubmit, watch, errors } = useForm<Inputs>();\n    \n    const onSubmit = (data: Inputs) => {\n        console.log('data,', data)\n        loginUserMutation.mutate(data)\n    }\n\n    const notify = () => toast(\"you login success!\");\n\n    const notifyError = () => toast(\"login or password is wrong!\");\n\n    return (\n        <>\n            <ToastContainer />\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input id=\"email\" name=\"email\" type=\"email\" ref={register({ required: true })}/>\n                    {errors.email && <span>This field is required</span>}\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input id=\"password\" name=\"password\" type=\"password\" ref={register({ required: true })} />\n                    {errors.password && <span>This field is required</span>}\n                </div>\n\n                <input type=\"submit\" />\n            </form>\n        </>\n    );\n}","/Users/macmini/Documents/Cources/Social_network/client/src/reportWebVitals.ts",[],"/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Home.tsx",["41","42"],"import React, {useEffect} from 'react';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\nimport { apiPath } from '../Consts/api';\n\nexport default function Home() {\n  const { isLoading, error, data, isFetching } = useQuery(\"userData\", () => {\n    console.log('localStorage.getItem(', localStorage.getItem('token'))\n     return axios.get(`${apiPath}/auth`, {\n       headers: {'authorization': `Bearer ${localStorage.getItem('token')}`}\n     }\n    )},\n     {\n      enabled: !!localStorage.getItem('token')\n     }\n  );\n\n  useEffect(()=> {\n    if(error){\n      localStorage.removeItem(\"token\")\n    }  \n  }, [error])\n\n  console.log('data>>>>>>>>>', error, data)\n  return (\n      <div>\n        {data?.data.firstName ? `Hello ${data?.data.firstName}` : 'Home page'}\n      </div>\n  );\n}\n","/Users/macmini/Documents/Cources/Social_network/client/src/Consts/api.ts",[],"/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Profile.tsx",["43","44"],"/Users/macmini/Documents/Cources/Social_network/client/src/Pages/Profiles.tsx",["45","46"],{"ruleId":"47","severity":1,"message":"48","line":39,"column":8,"nodeType":"49","endLine":39,"endColumn":48,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":41,"column":37,"nodeType":"53","messageId":"54","endLine":41,"endColumn":42},{"ruleId":"47","severity":1,"message":"55","line":30,"column":8,"nodeType":"49","endLine":30,"endColumn":45,"suggestions":"56"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":37,"nodeType":"53","messageId":"54","endLine":39,"endColumn":42},{"ruleId":"51","severity":1,"message":"57","line":7,"column":11,"nodeType":"53","messageId":"54","endLine":7,"endColumn":20},{"ruleId":"51","severity":1,"message":"58","line":7,"column":35,"nodeType":"53","messageId":"54","endLine":7,"endColumn":45},{"ruleId":"47","severity":1,"message":"55","line":30,"column":8,"nodeType":"49","endLine":30,"endColumn":45,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":37,"nodeType":"53","messageId":"54","endLine":39,"endColumn":42},{"ruleId":"47","severity":1,"message":"55","line":30,"column":8,"nodeType":"49","endLine":30,"endColumn":45,"suggestions":"60"},{"ruleId":"51","severity":1,"message":"52","line":39,"column":37,"nodeType":"53","messageId":"54","endLine":39,"endColumn":42},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'registerUserMutation.data'. Either include them or remove the dependency array.","ArrayExpression",["61"],"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["62"],"'isLoading' is assigned a value but never used.","'isFetching' is assigned a value but never used.",["63"],["64"],{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},{"desc":"67","fix":"69"},{"desc":"67","fix":"70"},"Update the dependencies array to be: [history, registerUserMutation.data, registerUserMutation.data?.data.token]",{"range":"71","text":"72"},"Update the dependencies array to be: [history, loginUserMutation.data?.data.token]",{"range":"73","text":"74"},{"range":"75","text":"74"},{"range":"76","text":"74"},[1085,1125],"[history, registerUserMutation.data, registerUserMutation.data?.data.token]",[950,987],"[history, loginUserMutation.data?.data.token]",[950,987],[950,987]]